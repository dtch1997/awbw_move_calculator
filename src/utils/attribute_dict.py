# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

import json

class AttributeDict:
    """
    A wrapper class for accessing dictionary keys as objects. 
    """
    
    def __init__(self, dictionary):
        self._dictionary = {}
        for key, value in dictionary.items():
            key = self.make_valid_key_(key)
            self.add(key, value)
            
    def add(self, key, value):
        if issubclass(type(value), dict):
            value = AttributeDict(value)
        self._dictionary[key] = value
        
    def __contains__(self, key):
        return key in self._dictionary
        
    def __getitem__(self, key):
        """
        Use this method to get numeric keys as keys. 
        """
        return self._dictionary[key]
        
    def __getattr__(self, attr):
        """
        Use this method to get non-numeric keys as attributes. 
        
        In Python, this method is only called as a last resort. 
        See https://stackoverflow.com/questions/2405590/how-do-i-override-getattr-in-python-without-breaking-the-default-behavior
        """
        if attr not in self._dictionary:
            raise AttributeError(attr)
        return self._dictionary[attr]
    
    @property
    def keys(self):
        return self._dictionary.keys()
    
    @property
    def items(self):
        return self._dictionary.items()
        
    @staticmethod
    def from_json_string(s: str):
        d = json.loads(s)
        return AttributeDict(d)    
    
    @staticmethod
    def from_json_file(path: str):
        with open(path, 'r') as jsonfile:
            d = json.load(jsonfile)
            return AttributeDict(d)

    def __repr__(self):
        return self._dictionary.__repr__()
    
    @staticmethod
    def make_valid_key_(raw_key: str):
        valid_key = raw_key
        if isinstance(raw_key, str) and raw_key.isnumeric():
            valid_key = int(raw_key)
        return valid_key    
    
def test():
    base_damage_obj_str = '{"ATTACK1":{"2":{"3":15,"4":55,"5":85,"6":75,"7":70,"8":85,"9":65,"10":85,"46":15,"960900":55,"1141438":5},"3":{"3":55,"4":85,"5":105,"6":105,"7":105,"8":105,"9":105,"10":105,"15":10,"16":45,"17":35,"18":10,"28":35,"29":10,"46":45,"960900":85,"1141438":25},"4":{"3":15,"4":55,"5":85,"6":75,"7":70,"8":85,"9":65,"10":85,"15":1,"16":5,"17":10,"18":1,"28":10,"29":1,"46":15,"960900":55,"1141438":10},"7":{"1":90,"2":85,"3":45,"4":70,"5":80,"6":70,"7":75,"8":80,"9":75,"10":80,"15":40,"16":65,"17":55,"18":60,"28":55,"29":45,"46":40,"960900":70,"1141438":15},"8":{"1":95,"2":90,"3":55,"4":80,"5":90,"6":80,"7":80,"8":85,"9":85,"10":90,"15":55,"16":85,"17":60,"18":85,"28":60,"29":60,"46":50,"960900":80,"1141438":25},"9":{"1":105,"2":105,"3":10,"4":25,"5":60,"6":50,"7":50,"8":55,"9":45,"10":55,"11":65,"12":75,"13":120,"14":120,"30":75,"46":5,"960900":25,"968731":120,"1141438":1},"10":{"11":100,"12":100,"13":120,"14":120,"30":100,"968731":120},"11":{"11":55,"12":100,"13":100,"14":100,"30":85,"968731":120},"12":{"1":110,"2":110,"3":95,"4":105,"5":105,"6":105,"7":105,"8":105,"9":95,"10":105,"15":75,"16":85,"17":95,"18":95,"28":95,"29":75,"46":90,"960900":105,"1141438":35},"13":{"3":25,"4":55,"5":55,"6":60,"7":65,"8":65,"9":25,"10":65,"15":25,"16":55,"17":25,"18":25,"28":25,"29":25,"46":20,"960900":55,"1141438":10},"15":{"1":95,"2":90,"3":55,"4":80,"5":90,"6":80,"7":80,"8":85,"9":85,"10":90,"15":50,"16":95,"17":95,"18":95,"28":95,"29":60,"46":50,"960900":80,"1141438":25},"16":{"18":90,"30":100},"18":{"15":55,"16":25,"17":95,"18":55,"28":95,"29":75},"29":{"11":100,"12":100,"13":115,"14":115,"30":100,"968731":120},"30":{"1":90,"2":90,"3":70,"4":75,"5":85,"6":85,"7":75,"8":85,"9":50,"10":85,"11":45,"12":70,"13":85,"14":95,"15":45,"16":35,"17":65,"18":55,"28":65,"29":45,"30":55,"46":60,"960900":80,"968731":120,"1141438":15},"46":{"3":75,"4":105,"5":125,"6":125,"7":115,"8":125,"9":115,"10":125,"15":15,"16":50,"17":50,"18":15,"28":40,"29":15,"46":55,"960900":105,"1141438":35},"960900":{"1":95,"2":90,"3":55,"4":80,"5":90,"6":80,"7":80,"8":85,"9":85,"10":90,"11":65,"12":75,"13":105,"14":105,"15":55,"16":85,"17":60,"18":85,"28":60,"29":60,"30":75,"46":50,"960900":80,"968731":120,"1141438":25},"1141438":{"3":125,"4":180,"5":195,"6":195,"7":195,"8":195,"9":195,"10":195,"15":45,"16":65,"17":75,"18":45,"28":105,"29":45,"46":115,"960900":180,"1141438":65}},"ATTACK2":{"1":{"1":55,"2":45,"3":1,"4":5,"5":12,"6":14,"7":15,"8":25,"9":5,"10":26,"13":7,"14":30,"46":1,"960900":5,"1141438":1},"2":{"1":65,"2":55,"3":1,"4":6,"5":18,"6":20,"7":32,"8":35,"9":6,"10":35,"13":9,"14":35,"46":1,"960900":6,"1141438":1},"3":{"1":105,"2":95,"4":8,"5":45,"6":45,"7":45,"8":55,"9":7,"10":35,"13":12,"14":45,"46":1,"960900":8,"1141438":1},"4":{"1":75,"2":70,"3":1,"4":6,"5":40,"6":45,"7":45,"8":55,"9":6,"10":30,"13":10,"14":40,"46":1,"960900":6,"1141438":1},"5":{"1":70,"2":65,"3":1,"4":6,"5":35,"6":45,"7":45,"8":55,"9":4,"10":28,"13":12,"14":35,"46":1,"960900":6,"1141438":1},"13":{"1":75,"2":75,"3":1,"4":6,"5":30,"6":20,"7":25,"8":35,"9":6,"10":35,"13":65,"14":95,"46":1,"960900":6,"1141438":1},"16":{"11":55,"12":65,"13":115,"14":115,"28":25,"29":5,"968731":120},"46":{"1":125,"2":115,"3":1,"4":10,"5":65,"6":65,"7":65,"8":75,"9":17,"10":55,"13":22,"14":55,"46":1,"960900":10,"1141438":1},"1141438":{"1":135,"2":125,"3":1,"4":10,"5":65,"6":65,"7":65,"8":75,"9":17,"10":55,"13":22,"14":55,"46":1,"960900":10,"1141438":1}}}'
    attrdict = AttributeDict.from_json_string(base_damage_obj_str)
    print(attrdict.keys)
    print(attrdict.ATTACK1.keys)
    # print(attrdict.ATTACK1.2) This throws a syntax error. But we won't need to use it

if __name__ == "__main__":
    test()
    